# 
# Makefile for liquid fixed-point math libraries
#

# paths
srcdir = 	@srcdir@
prefix = 	@prefix@
exec_prefix = 	@exec_prefix@
VPATH = 	@srcdir@
include_dirs	:= . include
vpath %.h $(include_dirs)

# programs
CC 	= @CC@
MV	:= mv -f
RM	:= rm -f
SED	:= sed
AR	:= ar
RANLIB	:= ranlib
AS	:= as

# flags
INCLUDE_CFLAGS	= $(addprefix -I ,$(include_dirs))
CONFIG_CFLAGS	= @ARCH_OPTION@
CFLAGS		+= $(INCLUDE_CFLAGS) -g -O2 -Wall -I. @ARCH_OPTION@ @FPM_OPTION@ @DEBUG_OPTION@
LDFLAGS		+= @LIBS@
ARFLAGS		= r
ASFLAGS		+= -g
#ASFLAGS		+= -arch ppc7400

# Target collection
#
# Information about targets is collected in these variables
programs		:=
sources			:=
libraries		:=
extra_clean		:=

objects		= $(patsubst %.c,%.o,$(sources))
dependencies	= $(patsubst %.c,%.d,$(sources))

all:


sources  +=			\
	q32_dotprod.port.c	\
	q32_div.port.c		\
	src/clz.c		\
	src/log2.polyfit.c		\
	src/exp2.polyfit.c		\
	src/log.port.c		\
	src/exp.port.c		\
	src/sqrt.newton.c		\
	src/sincos.pwpolyfit.c		\
	src/msb_index.c		\
	gentab/q32_tables.c

extra_clean		+=	\
	gentab/gentab_q32	\
	gentab/q32_tables.c

#objects		+= gentab/q32_tables.o

#
# Auto-generated tables
#
gentab/gentab_q32: gentab/gentab_q32.c
	$(CC) $(CFLAGS) -lm $< -o $@

gentab/q32_tables.c: gentab/gentab_q32
	./gentab/gentab_q32 > gentab/q32_tables.c

# Dependencies
# Use compiler's -M flags (and equivalent) to parse source files
# and create a list of dependencies.  Each list is stored in a
# .d file and included, below.
#
%.d: %.c 
	$(CC) $(CFLAGS) -MM -MG $< | $(SED) 's,\($(notdir $*)\.o\) *:,$(dir $@)\1 $@: ,' > $@
include $(dependencies)

objects += @MLIBS@
XLIBS = clz.o msb_index.o trig.o libmad_fixed.o \
	sin_table_q32_256.o \
	log2_fraction_table_32.o \
	log2_fraction_table_256.o \
	atan_table_q32_32_8.o

SHARED_LIB = @SH_LIB@

all: libliquidfpm.a $(SHARED_LIB)

install:
	@echo "installing..."
	mkdir -p @libdir@
	install -m 644 -p $(SHARED_LIB) libliquidfpm.a @libdir@
	@REBIND@
	mkdir -p $(prefix)/include
	mkdir -p $(prefix)/include/liquid
	install -m 644 -p include/liquidfpm.h $(prefix)/include/liquid
	
# Library definition
libliquidfpm.a: $(objects)
	$(AR) $(ARFLAGS) $@ $^
	$(RANLIB) $@

# darwin
libliquidfpm.dylib: $(objects)
	$(CC) -dynamiclib -install_name $@ -o $@ $^

# linux, et al
libliquidfpm.so: $(libraries)
	$(CC) -shared -Xlinker -soname=$@ -o $@ -Wl,-whole-archive $^ -Wl,-no-whole-archive -lc

# 
# LIBRARIES
#

# generate tables
#$(GENTABS) : % : src/%.c
#	$(CC) $(CFLAGS) -c $< -o $@
#	./$< > src/$<.lut.c

# library objects
$(LIBS) : %.o : src/%.c
	$(CC) $(CFLAGS) -c $< -o $@

#
# Tests
#
test: fpmtest
	./fpmtest

fpmtest.o: fpmtest.c include/liquidfpm.h

fpmtest: fpmtest.o libliquidfpm.a
	$(CC) $(CFLAGS) -lm $^ $(LDFLAGS) -o $@

#q32_mul.port.o: q32_mul.port.c

#q32_mul.ppc.o: q32_mul.ppc.s

#q32_mul.x86.o: q32_mul.x86.s

#q32_mul.intelmac.o: q32_mul.intelmac.s

# Benchmark
benchmark: bench/bench.c libliquidfpm.a
	$(CC) $(CFLAGS) -lm $^ $(LDFLAGS) -o $@

bench: benchmark
	./benchmark


#
# clean
#
clean:
	$(RM) $(objects)
	$(RM) $(dependencies)
	$(RM) $(SHARED_LIB)
	$(RM) libliquidfpm.a
	$(RM) fpmtest fpmtest.o
	$(RM) $(extra_clean)

distclean: clean
	rm -f config.log config.cache config.status config.h makefile
	rm -rf autom4te.cache

